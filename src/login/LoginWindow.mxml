<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="400" height="300" horizontalCenter="0" verticalCenter="0"
		 creationComplete="{lblCheckCode.text=GenerateCheckCode();}"
		 xmlns:login="login.*" skinClass="login.LoginWindowSkin">
	
	<fx:Script>
		<![CDATA[
			import head.head;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.validators.EmailValidator;
			
			import spark.events.TextOperationEvent;
			
			private const email_regex:RegExp =/^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/;//验证Email
			private const password_regex:RegExp=/[a-z0-9]{6,16}/ ;//验证密码含有字母和数字
			
			//关闭
			protected function close_clickHandler(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			//生成带噪点的验证码
			protected function GenerateCheckCode():String
			{
				//初始化
				var ran:Number;
				var number:Number;
				var code:String;
				var checkCode:String="";
				//生成四位随机数
				for(var i:int=0; i < 4; i++)
				{
					//Math.random生成数为类似为0.1234
					ran=Math.random();
					number=Math.round(ran * 10000);
					//如果是2的倍数生成一个数字
					if (number % 2 == 0)
						//"0"的ASCII码是48
						code=String.fromCharCode(48 + (number % 10));
						//生成一个字母
					else
						//"A"的ASCII码为65
						code=String.fromCharCode(65 + (number % 26));
					checkCode+=code;
				}
				//绘制躁点
				lblCheckCode.graphics.clear();
				var c:int=checkCode.length * 10;
				for(var j:int=0; j < c; j++)
				{
					var x:int=Math.random() * lblCheckCode.width;
					var y:int=Math.random() * lblCheckCode.height;
					lblCheckCode.graphics.lineStyle(1, 0x7C929D);
					lblCheckCode.graphics.drawRect(x, y, .5, .5);
				}
				return checkCode;
			}
			
			//重置登录界面
			protected function resetHandle():void
			{
				txtUsername.mytext.text="";
				txtPassword.mytext.text="";
				txtCheckCode.text="";
			}
			
			
			//重置注册界面
			protected function registerresetHandle():void
			{
				regUsername.mytext.text="";
				regEmail.mytext.text="";
				regPassword.mytext.text="";
				regRPassword.mytext.text="";
			}
			
			//登录
			protected function loginHandle():void
			{
				messagegroup.visible=true;
				messagegroup.includeInLayout=true;
				this.height=330;
				
				if(txtUsername.mytext.text==""&&txtPassword.mytext.text=="")
				{
					errormessage.text="请输入用户名和密码。";
				}
				else if(txtUsername.mytext.text=="")
				{
					errormessage.text="请输入用户名。";
				}
				else if(txtPassword.mytext.text=="")
				{
					errormessage.text="请输入密码。";
				}
				else if(txtCheckCode.text=="")
				{
					errormessage.text="请输入验证码。";
				}
				else if(txtCheckCode.text.toLocaleLowerCase()!=lblCheckCode.text.toLocaleLowerCase())
				{
					errormessage.text="验证码错误，请重新输入。";
					lblCheckCode.text=GenerateCheckCode();
				}
				else if(checkUser(txtUsername.mytext.text,txtPassword.mytext.text))
				{
					messagegroup.visible=false;
					messagegroup.includeInLayout=false;
					this.height=300;
					PopUpManager.removePopUp(this);
					var mytophead:head=(this.parentApplication as ColdChain).tophead;
					mytophead.currentState='login';
					mytophead.LoginLabel.text=txtUsername.mytext.text;
				}
				else
				{   
					errormessage.text="用户名或密码错误，请重新输入。";
				}
			}
			
			//验证用户名和密码
			private function checkUser(username:String,password:String):Boolean
			{
				for each(var note:Object in myXML.user)
				{
					var user:User=new User(note);
					if(user.username==username)
					{
						if(user.password==password)
							return true;
						else
							return false;
					}
					
				}
				return false;
			}
			
			protected	function changeregiserHandle():void
			{
				currentState='register';
				this.height=370;
				regUsername.mytext.addEventListener(TextOperationEvent.CHANGE,regUsername_textchange);
				regEmail.mytext.addEventListener(TextOperationEvent.CHANGE,regEmail_textchange);
				regPassword.mytext.addEventListener(TextOperationEvent.CHANGE,regPassword_textchange);
				regRPassword.mytext.addEventListener(TextOperationEvent.CHANGE,regRPassword_textchange);
			}
			
			//验证注册用户名
			private function regUsername_textchange(event:TextOperationEvent):void
			{
				for each(var note:Object in myXML.user)
				{
					var user:User=new User(note);
					if(user.username==(event.target as TextInput).text)
					{
						regUsername.showcheckimage=false;
						return;
					}
				}
				regUsername.showcheckimage=true;
			}
			
			//验证注册邮箱
			private function regEmail_textchange(event:TextOperationEvent):void
			{
				if(email_regex.test((event.target as TextInput).text))
				{
					for each(var note:Object in myXML.user)
					{
						var user:User=new User(note);
						if(user.email==(event.target as TextInput).text)
						{
							regEmail.showcheckimage=false;
							return;
						}
					}
					regEmail.showcheckimage=true;
				}
				else
				{
					regEmail.showcheckimage=false;
				}
			}
			
			//验证密码
			private function regPassword_textchange(event:TextOperationEvent):void
			{
				if(password_regex.test((event.target as TextInput).text))
				{
					regPassword.showcheckimage=true;
					regRPassword.enabled=true;
				}
				else
				{
					regPassword.showcheckimage=false;
					regRPassword.enabled=false;
				}
			}
			
			//验证密码
			private function regRPassword_textchange(event:TextOperationEvent):void
			{
				if((event.target as TextInput).text==regPassword.mytext.text)
				{
					regRPassword.showcheckimage=true;
				}
				else
				{
					regRPassword.showcheckimage=false;
				}
				
			}
			
			//注册
			protected function registerHandle():void
			{
				if(regUsername.showcheckimage&&regEmail.showcheckimage&&regPassword.showcheckimage&&regRPassword.showcheckimage)
				{
					myXML.prependChild
						(<user>
							<username>{regUsername.mytext.text}</username>
							<password>{regPassword.mytext.text}</password>
							<email>{regEmail.mytext.text}</email>
						</user>);

					//var fr:FileReference=new FileReference();
					//fr.save(myXML,"UserMessage.xml");
					
					resetHandle();
					messagegroup.visible=false;
					currentState='login';
					this.height=300;
				}
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<fx:XML id="myXML" source="UserMessage.xml"/>
	</fx:Declarations>
	
	<s:states>
		<s:State name="login"/>
		<s:State name="register"/>
	</s:states>
	
	<s:Group left="0" right="0" top="0" bottom="0">
		<s:layout>
			<s:VerticalLayout gap="0" horizontalAlign="justify" />
		</s:layout>
		
		<!--标题-->
		<s:Group>
			<s:Rect left="0" right="0" top="0" bottom="0" topLeftRadiusX="3" topRightRadiusX="3">
				<s:fill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="0xff8000" ratio="1"/>
						<s:GradientEntry color="0xec6000" ratio="0"/>
					</s:LinearGradient>
				</s:fill>
			</s:Rect>
			<s:Label maxDisplayedLines="1" left="20" right="3" top="1" bottom="0" minHeight="60"
					 verticalAlign="middle" textAlign="start" fontWeight="bold" fontFamily="SimHei" fontSize="16"
					 text.login="用 户 登 录" text.register="用 户 注 册" color="0xFBFBFB">
				<s:filters>
					<s:DropShadowFilter color="0x000000" alpha="0.2" distance="1"/>
				</s:filters>
			</s:Label>
			<s:Image id="close" right="22" top="22"
					 buttonMode="true" source="images/loginwindow/close.png" useHandCursor="true" click="close_clickHandler(event)">
				<s:filters>
					<s:GlowFilter alpha="1" color="0xFFFFFF"/>
				</s:filters>
			</s:Image>
		</s:Group>
		
		<!--内容-->
		<s:Group width="100%" height="100%" minWidth="0" minHeight="0">
			<s:Rect id="background" left="0" top="0" right="0" bottom="0" 
					bottomLeftRadiusX="3" bottomRightRadiusX="3">
				<s:stroke>
					<s:SolidColorStroke color="#FFFFFF" weight="2"/>
				</s:stroke>
				<s:fill>
					<s:SolidColor id="backgroundFill" color="#FBFBFB"/>
				</s:fill>
			</s:Rect>
			
			<!--登录界面-->
			<s:VGroup top="5" bottom="5" left="5" right="5" width="100%" height="100%" horizontalAlign="center" includeIn="login" includeInLayout="true">
				<s:Group id="messagegroup" width="330" height="30" visible="false" includeInLayout="false" verticalCenter="0">
					<s:Rect top="6" width="100%" height="100%">
						<s:stroke>
							<s:SolidColorStroke color="#FF8080" weight="1"/>
						</s:stroke>
						<s:fill>
							<s:SolidColor color="#FFF2F2"/>
						</s:fill>
					</s:Rect>
					<s:Image left="4" top="10" source="images/loginwindow/exclamation.png"/>
					<s:Label left="24" top="6" height="24" verticalAlign="middle" id="errormessage" color="#666666"/>
				</s:Group>
				<s:Spacer/>
				<login:MyTextInput id="txtUsername" _prompt="用户名" aspassword="false" nomalImageSource="images/loginwindow/text-box1.png" focusImageSource="images/loginwindow/text-box2.png"/>
				<s:Spacer />
				<login:MyTextInput id="txtPassword" _prompt="密码" aspassword="true"  nomalImageSource="images/loginwindow/text-box5.png" focusImageSource="images/loginwindow/text-box6.png"/>
				<s:HGroup height="40" verticalAlign="middle">
					<s:TextInput id="txtCheckCode" prompt="输入验证码" height="26" borderColor="0xB0B0B0" fontFamily="黑体" fontSize="14" color="#606060" width="100"/>
					<s:Spacer/>
					<s:Label id="lblCheckCode" width="60" fontSize="20" fontWeight="bold" color="#5493E1" horizontalCenter="0" verticalAlign="middle" click="lblCheckCode.text=GenerateCheckCode();"/>
					<mx:LinkButton label="看不清楚" color="#868686" click="lblCheckCode.text=GenerateCheckCode();" textDecoration="underline"/>
				</s:HGroup>
				<s:HGroup height="50" verticalAlign="middle">
					<s:Button width="100" height="40" label="登 录" click="loginHandle()" skinClass="login.LoginButtonSkin"/>
					<s:Spacer width="20"/>
					<s:Button label="重 置" width="100" height="40" click="resetHandle()" skinClass="login.LoginButtonSkin"/>
					<mx:LinkButton label="新用户注册" color="#868686" textDecoration="underline" click="changeregiserHandle()"/>
				</s:HGroup>
			</s:VGroup>
			
			<!--注册界面-->
			<s:VGroup top="15" bottom="5" left="5" right="5" width="100%" height="100%" horizontalAlign="center" includeIn="register" includeInLayout="true">
				<login:MyTextInput id="regUsername" _prompt="用户名" aspassword="false" nomalImageSource="images/loginwindow/text-box1.png" focusImageSource="images/loginwindow/text-box2.png"/>
				<s:Spacer />
				<login:MyTextInput id="regEmail" _prompt="邮箱" aspassword="false" nomalImageSource="images/loginwindow/text-box3.png" focusImageSource="images/loginwindow/text-box4.png"/>
				<s:Spacer />
				<login:MyTextInput id="regPassword" _prompt="密码" aspassword="true"  nomalImageSource="images/loginwindow/text-box5.png" focusImageSource="images/loginwindow/text-box6.png"/>
				<s:Spacer />
				<login:MyTextInput id="regRPassword" _prompt="确认密码" aspassword="true"  nomalImageSource="images/loginwindow/text-box5.png" focusImageSource="images/loginwindow/text-box6.png" enabled="false"/>
				
				<s:HGroup height="50" verticalAlign="middle">
					<s:Button label="注册" width="100" height="40" click="registerHandle()" skinClass="login.LoginButtonSkin"/>
					<s:Spacer/>
					<s:Button label="重置" width="100" height="40" click="registerresetHandle()" skinClass="login.LoginButtonSkin"/>
				</s:HGroup>
			</s:VGroup>
		</s:Group>
	</s:Group>
</s:Panel>